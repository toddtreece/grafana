{{>partial_header}}
package {{packageName}}

{{#operations}}
import (
	"github.com/go-macaron/binding"

	"github.com/grafana/grafana/pkg/api/routing"
	"github.com/grafana/grafana/pkg/api/response"
	"github.com/grafana/grafana/pkg/models"
	apimodels "github.com/grafana/alerting-api/pkg/api"
	"github.com/grafana/grafana/pkg/middleware"
)

type {{classname}}Service interface { {{#operation}}
	{{nickname}}(*models.ReqContext{{#bodyParams}}, apimodels.{{dataType}}{{/bodyParams}}) response.Response{{/operation}}
}

func (api *API) Register{{classname}}Endpoints(srv {{classname}}Service) {
	api.RouteRegister.Group("", func(group routing.RouteRegister){ {{#operations}}{{#operation}}
		group.{{httpMethod}}(toMacaronPath("{{{path}}}"){{#bodyParams}}, binding.Bind(apimodels.{{dataType}}{}){{/bodyParams}}, routing.Wrap(srv.{{nickname}})){{/operation}}{{/operations}}
	}, middleware.ReqSignedIn)
}{{#operation}}
{{/operation}}{{/operations}}


